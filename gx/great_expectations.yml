# Welcome to Great Expectations! Always know what to expect from your data.
#
# Here you can define datasources, batch kwargs generators, integrations and
# more. This file is intended to be committed to your repo. For help with
# configuration please:
#   - Read our docs: https://docs.greatexpectations.io/docs/guides/connecting_to_your_data/connect_to_data_overview/#2-configure-your-datasource
#   - Join our slack channel: http://greatexpectations.io/slack

# config_version refers to the syntactic version of this config file, and is used in maintaining backwards compatibility
# It is auto-generated and usually does not need to be changed.
config_version: 3.0

# Datasources tell Great Expectations where your data lives and how to get it.
# Read more at https://docs.greatexpectations.io/docs/guides/connecting_to_your_data/connect_to_data_overview
datasources: {}

# This config file supports variable substitution which enables: 1) keeping
# secrets out of source control & 2) environment-based configuration changes
# such as staging vs prod.
#
# When GX encounters substitution syntax (like `my_key: ${my_value}` or
# `my_key: $my_value`) in the great_expectations.yml file, it will attempt
# to replace the value of `my_key` with the value from an environment
# variable `my_value` or a corresponding key read from this config file,
# which is defined through the `config_variables_file_path`.
# Environment variables take precedence over variables defined here.
#
# Substitution values defined here can be a simple (non-nested) value,
# nested value such as a dictionary, or an environment variable (i.e. ${ENV_VAR})
#
#
# https://docs.greatexpectations.io/docs/guides/setup/configuring_data_contexts/how_to_configure_credentials


config_variables_file_path: uncommitted/config_variables.yml

# The plugins_directory will be added to your python path for custom modules
# used to override and extend Great Expectations.
plugins_directory: plugins/

stores:
# Stores are configurable places to store things like Expectations, Validations
# Data Docs, and more. These are for advanced users only - most users can simply
# leave this section alone.
#
# Three stores are required: expectations, validations, and
# evaluation_parameters, and must exist with a valid store entry. Additional
# stores can be configured for uses such as data_docs, etc.
  expectations_store:
    class_name: ExpectationsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: expectations/

  validations_store:
    class_name: ValidationsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/validations/

  evaluation_parameter_store:
    class_name: EvaluationParameterStore
  checkpoint_store:
    class_name: CheckpointStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      suppress_store_backend_id: true
      base_directory: checkpoints/

  profiler_store:
    class_name: ProfilerStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      suppress_store_backend_id: true
      base_directory: profilers/

expectations_store_name: expectations_store
validations_store_name: validations_store
evaluation_parameter_store_name: evaluation_parameter_store
checkpoint_store_name: checkpoint_store

data_docs_sites:
  # Data Docs make it simple to visualize data quality in your project. These
  # include Expectations, Validations & Profiles. The are built for all
  # Datasources from JSON artifacts in the local repo including validations &
  # profiles from the uncommitted directory. Read more at https://docs.greatexpectations.io/docs/terms/data_docs
  local_site:
    class_name: SiteBuilder
    show_how_to_buttons: true
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/data_docs/local_site/
    site_index_builder:
      class_name: DefaultSiteIndexBuilder

anonymous_usage_statistics:
  data_context_id: b3c848ea-41e9-4d6d-98e5-4efbd897874e
  enabled: false
notebooks:
include_rendered_content:
  globally: false
  expectation_suite: false
  expectation_validation_result: false
fluent_datasources:
  air_quality:
    type: pandas_filesystem
    assets:
      air_quality_data_E403:
        type: csv
        batching_regex: E403.csv
      air_quality_data_E404:
        type: csv
        batching_regex: E404.csv
      air_quality_data_E405:
        type: csv
        batching_regex: E405.csv
      air_quality_data_E407:
        type: csv
        batching_regex: E407.csv
      air_quality_data_E408:
        type: csv
        batching_regex: E408.csv
      air_quality_data_E409:
        type: csv
        batching_regex: E409.csv
      air_quality_data_E410:
        type: csv
        batching_regex: E410.csv
      air_quality_data_E411:
        type: csv
        batching_regex: E411.csv
      air_quality_data_E412:
        type: csv
        batching_regex: E412.csv
      air_quality_data_E413:
        type: csv
        batching_regex: E413.csv
      air_quality_data_E414:
        type: csv
        batching_regex: E414.csv
      air_quality_data_E415:
        type: csv
        batching_regex: E415.csv
      air_quality_data_E417:
        type: csv
        batching_regex: E417.csv
      air_quality_data_E418:
        type: csv
        batching_regex: E418.csv
      air_quality_data_E419:
        type: csv
        batching_regex: E419.csv
      air_quality_data_E420:
        type: csv
        batching_regex: E420.csv
      air_quality_data_E421:
        type: csv
        batching_regex: E421.csv
      air_quality_data_E423:
        type: csv
        batching_regex: E423.csv
      air_quality_data_E424:
        type: csv
        batching_regex: E424.csv
      air_quality_data_E801:
        type: csv
        batching_regex: E801.csv
      air_quality_data_E802:
        type: csv
        batching_regex: E802.csv
      air_quality_data_E803:
        type: csv
        batching_regex: E803.csv
      air_quality_data_E804:
        type: csv
        batching_regex: E804.csv
    base_directory: ../data/preprocessed/air
